#ifndef ARBLOCKSINTERFACE_H
#define ARBLOCKSINTERFACE_H

#include <QMainWindow>
#include <Scene.h>
#include <Square.h>

namespace nxr {

typedef actionlib::SimpleActionClient<ar_blocks::BuildStructureAction> Client;

class ARBlocksInterface : public QMainWindow
{
  Q_OBJECT
public:
  ARBlocksInterface();
  
private:
  // Qt
  QHBoxLayout *side_layout_;
  QVBoxLayout *left_layout_;
  QVBoxLayout *right_layout_;
  
  QHBoxLayout *viz2d_panel_;
  QHBoxLayout *viz2d_tools_;
  
  QHBoxLayout *block_size_layout_;
  
  QLabel *left_panel_title_;
  QLabel *current_layer_;
  
  QLabel *block_size_label_;
  QLineEdit *block_size_input_;
  
  QLabel *layer_count_label_;
  QLabel *block_count_label_;
  QLabel *stability_label_;
  
  QPushButton *next_layer_btn_;
  QPushButton *prev_layer_btn_;
  QPushButton *add_layer_btn_;
  QPushButton *remove_layout_btn_;
  
  QPushButton *abort_btn_;
  QPushButton *build_btn_;
  
  Scene *block_scene_;
  
  // ROS
  ros::NodeHandle nh_;
  Client ar_blocks_client_;
  
  // ar_blocks action server callbacks
  void arBlocksDoneCB();
  void arBlocksActiveCB();
  void arBlocksFeedbackCB();
  
};

} // namespace nxr

#endif // ARBLOCKSINTERFACE_H
